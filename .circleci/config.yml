# Requires variables
#   * DO_TOKEN
#	* DOCKER_USER
#	* DOCKER_PASS
#	* DEPLOY_NODE

defaults: &DEFAULT
  working_directory: ~/app
  docker:
    - image: docker:17.09.0-ce-git

version: 2
jobs:
  build:
    <<: *DEFAULT
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: false
      - run:
          name: Install dependencies
          command: echo "No dependencies"
      - run:
          name: Build application Docker image
          command: |
            docker build -t lapinlabs/mdweb .
      # Note: we don't push here, we wait for tests to pass and push in the deploy job

  test:
    <<: *DEFAULT
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Build test container
          command: |
            docker build -t mdweb-test -f Dockerfile.test .
            docker run --name test-app mdweb-test
            docker cp test-app:/opt/mdweb/coverage /tmp/coverage
      - store_artifacts:
          path: /tmp/coverage
      - store_test_results:
          path: /tmp/coverage

  deploy:
    <<: *DEFAULT
    steps:
      - checkout
      - setup_remote_docker
      - run:
          name: Push application Docker image
          command: |
            docker login -u $DOCKER_USER -p $DOCKER_PASS
            docker tag lapinlabs/mdweb lapinlabs/mdweb:${CIRCLE_BRANCH//\//-}-${CIRCLE_BUILD_NUM}
            docker push lapinlabs/mdweb:${CIRCLE_BRANCH//\//-}-${CIRCLE_BUILD_NUM}
            docker push lapinlabs/mdweb:latest
      - run:
          name: Remotely deploy to droplet
          command: |
            apk add --update curl curl-dev jq
            export IP=`curl -s -X GET -H "Content-Type: application/json" -H "Authorization: Bearer $DO_TOKEN" "https://api.digitalocean.com/v2/droplets/" | jq ".droplets[] | select(.name == \"$DEPLOY_NODE\") | .networks.v4[0].ip_address"`
            export IP=`echo $IP | sed -e 's/^"//' -e 's/"$//'`
            echo "Deploying to $DEPLOY_NODE [$IP]"
            ssh -o StrictHostKeyChecking=no root@${IP} "service container-mdweb redeploy"

workflows:
  version: 2
  build-test-and-deploy:
    jobs:
      - test:
          context: deployment
      - build:
          context: deployment
      - deploy:
          context: deployment
          requires:
            - build
            - test
          filters:
            branches:
              only:
                - master
